kube-prometheus-stack:
  defaultRules:
    create: false
    rules:
      alertmanager: false
      etcd: false
      general: false
      k8s: false
      kubeApiserver: false
      kubeApiserverAvailability: false
      kubeApiserverError: false
      kubeApiserverSlos: false
      kubelet: false
      kubePrometheusGeneral: false
      kubePrometheusNodeAlerting: false
      kubePrometheusNodeRecording: false
      kubernetesAbsent: false
      kubernetesApps: false
      kubernetesResources: false
      kubernetesStorage: false
      kubernetesSystem: false
      kubeScheduler: false
      kubeStateMetrics: false
      network: false
      node: false
      prometheus: false
      prometheusOperator: false
      time: false
  alertmanager:
    enabled: false
    podDisruptionBudget:
      enabled: true
      minAvailable: 1
    alertmanagerSpec:
      image:  
        repository: quay.io/prometheus/alertmanager
        tag: v0.24.0
      alertmanagerConfigNamespaceSelector: 
        matchExpressions:
          - key: would-be-very-surprised-if-this-existed.io/lucas-shot-greedo-first # ??????????????????????
            operator: DoesNotExist
      resources:
        requests:
          cpu: 200m
          memory: 200Mi
        limits: 
          cpu: 200m
          memory: 200Mi
      logFormat: json
      logLevel: error
      storage:
        volumeClaimTemplate:
          spec:
            storageClassName: prometheus
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 20Gi
      replicas: 2
  coreDns:
    enabled: false
  grafana:
    enabled: false
  kubeApiServer:
    enabled: false
  kubelet:
    enabled: false
    interval: "20s"
    resource: true
    resourcePath: /metrics/resource
    cAdvisorMetricRelabelings:
    - action: replace
      regex: (.*)
      replacement: $1
      separator: ;
      sourceLabels:
      - node
      targetLabel: instance
    - action: replace
      regex: (.+)
      sourceLabels:
      - container
      targetLabel: container_name
    - action: replace
      regex: (.+)
      sourceLabels:
      - pod
  kubeControllerManager:
    enabled: false
  kubeEtcd:
    enabled: false
  kubeProxy:
    enabled: false
  kubeScheduler:
    enabled: false
  kubeStateMetrics:
    enabled: false
  nodeExporter:
    enabled: false
  prometheusOperator:
    enabled: false
    resources: 
      limits:
        cpu: 200m
        memory: 450Mi
      requests:
        cpu: 100m
        memory: 450Mi
    image:
      repository: quay.io/prometheus-operator/prometheus-operator
      tag: v0.55.0
    prometheusConfigReloader:
      image:
        repository: quay.io/prometheus-operator/prometheus-config-reloader
        tag: v0.55.0
    thanosImage:
      repository: quay.io/thanos/thanos
      tag: v0.25.2
  prometheus:
    enabled: false
    thanosService:
      enabled: false
    thanosServiceMonitor:
      enabled: false
      interval: "30s"
    prometheusSpec:
      image:
        repository: quay.io/prometheus/prometheus
        tag: v2.34.0
      alertingEndpoints:
        - name: {{ template "kube-prometheus-stack.fullname" . }}-alertmanager
          namespace: default # ?????? if they run helm install -n test ? then ? 
          port: http-web
      disableCompaction: true
      enableAdminAPI: true
      enableFeatures: 
        - promql-at-modifier
      replicaExternalLabelName: "prometheus_replica"
      enforcedSampleLimit: false
      logFormat: json
      logLevel: error
      podMetadata:
        labels:
          app.kubernetes.io/component: prometheus
          thanos-peers: 'true' # ????????????????
          app.kubernetes.io/name: prometheus
      podMonitorNamespaceSelector:
        matchExpressions:
          - key: would-be-very-surprised-if-this-existed.io/lucas-shot-greedo-first
            operator: DoesNotExist
      probeNamespaceSelector:
        matchExpressions:
          - key: would-be-very-surprised-if-this-existed.io/lucas-shot-greedo-first
            operator: DoesNotExist
      ruleNamespaceSelector:
        matchExpressions:
          - key: would-be-very-surprised-if-this-existed.io/lucas-shot-greedo-first
            operator: DoesNotExist
      serviceMonitorNamespaceSelector:
        matchExpressions:
          - key: would-be-very-surprised-if-this-existed.io/lucas-shot-greedo-first
            operator: DoesNotExist
      retention: "12h" # ????? if they dont use thanos it should be days and not hours 
      storageSpec:
        volumeClaimTemplate:
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: "50Gi"
            storageClassName:  prometheus
